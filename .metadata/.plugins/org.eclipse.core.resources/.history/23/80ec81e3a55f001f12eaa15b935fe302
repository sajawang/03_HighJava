package kr.or.ddit.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import kr.or.ddit.util.DBUtil;
import kr.or.ddit.util.DBUtil3;
import kr.or.ddit.vo.BoardVO;
import kr.or.ddit.vo.MemberVO;

public class BoardDaoImpl implements IBoardDao{

	//싱글톤 만들기
	
		//1.정적필드
		private static BoardDaoImpl singleton = new BoardDaoImpl();
		
		//2.생성자
		private BoardDaoImpl() {}
		
		//3.정적메소드
		public static BoardDaoImpl getInstance() {
			return singleton;
		}

		@Override
		public List<BoardVO> getAllBoard() {
			Connection conn = null;
			PreparedStatement pstmt = null;
			ResultSet rs = null;
			List<BoardVO> boardList = null;//반환값이 저장될 변수

			try {
				conn = DBUtil3.getConnection();
				String sql = "select * from jdbc_board";
				
				pstmt = conn.prepareStatement(sql);
				
				rs = pstmt.executeQuery();
				
				boardList = new ArrayList<BoardVO>(); //List객체 생성
				
				while(rs.next()) {
					//1개의 레코드 데이터를 VO객체에 저장한다.
					BoardVO boardVo = new BoardVO();
					boardVo.setBoard_no(rs.getString("board_no"));
					boardVo.setBoard_title(rs.getString("mem_pass"));
					boardVo.setBoard_writer(rs.getString("mem_name"));
					boardVo.setBoard_date(rs.getString("mem_tel"));
					boardVo.setBoard_cnt(rs.getString("mem_addr"));
					
					memList.add(memVo); //VO객체를 List에 추가한다.
				}
				
			} catch (SQLException e) {
				e.printStackTrace();
			} finally {
				try { if(rs != null) rs.close(); } catch (SQLException e) {}
				try { if(pstmt != null) pstmt.close(); } catch (SQLException e) {}
				try { if(conn != null) conn.close(); } catch (SQLException e) {}
			}
			
			return boardList;
		}

		@Override
		public int insertBoard(BoardVO boardVo) {
			// TODO Auto-generated method stub
			return 0;
		}

		@Override
		public int updateBoard(BoardVO boardVo) {
			// TODO Auto-generated method stub
			return 0;
		}

		@Override
		public int deleteBoard(int boardNo) {
			// TODO Auto-generated method stub
			return 0;
		}
		
}














































