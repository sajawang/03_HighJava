package kr.or.ddit.basic;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

/*
 * LPROD테이블에 새로운 데이터를 추가하시오
 * 
 * lprod_gu와 lprod_nm은 직접 입력받아서 처리하고, 
 * lprod_id는 현재의 lprod_id에서 제일 큰값보다 1 크게 한다.
 * 
 * 입력받은 lprod_gu가 이미 등록되어 있는 값이면 새로운 값으로 다시 입력받아서 처리한다.
 *  
 */
public class JdbcTest05 {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		Connection conn = null;
		Statement stmt = null;
		PreparedStatement pstmt1 = null;
		PreparedStatement pstmt2 = null;
		ResultSet rs = null;
		
		try {
			
			Class.forName("oracle.jdbc.driver.OracleDriver");
			conn = DriverManager.getConnection(
					"jdbc:oracle:thin:@localhost:1521:xe",
					"csh93","java");
			System.out.println("lprod_gu 입력(예시 : P101) >> ");
			String in1 = scan.next();
			System.out.println("lprod_nm 입력(예시 : 여성잡화)  >> ");
			String in2 = scan.next();
			
			String sql1 = "insert into lprod(lprod_id, lprod_gu, lprod_nm)\r\n" + 
					"    values( (select max(lprod_id)+1 from lprod) , ? , ? )";
			pstmt1 = conn.prepareStatement(sql1);
			pstmt1.setNString(1, in1);

			String sql2 = "select count(*) from lprod where lprod_gu = ? ";
			pstmt2 = conn.prepareStatement(sql2);
			pstmt2.setNString(1, in1);
			
			rs = pstmt2.executeQuery();
			
			while(rs.next()) {
				int us = rs.getInt("count(*)");
				if(us>=1) {
					System.out.println("lprod_nm 다시 입력(예시 : 여성잡화)  >> ");
					String in3 = scan.next();
					pstmt1.setNString(2, in3);
				} else {
					pstmt1.setNString(2, in2);
				}
			}
			

			int cnt1 = pstmt1.executeUpdate();
			System.out.println("반환값 : "+cnt1);
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} finally {
			try { if(stmt != null) stmt.close(); } catch (SQLException e) {}
			try { if(pstmt1 != null) pstmt1.close(); } catch (SQLException e) {}
			try { if(pstmt2 != null) pstmt2.close(); } catch (SQLException e) {}
			try { if(conn != null) conn.close(); } catch (SQLException e) {}
		}
	}
}









































